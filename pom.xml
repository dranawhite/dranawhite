<?xml version="1.0" encoding="UTF-8"?>
<project xmlns = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dranawhite</groupId>
    <artifactId>dranawhite</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <name>dranawhite</name>
    <description>dranawhite项目为子项目提供基本功能支持</description>
    <url>http://www.dranawhite.com</url>

    <modules>
        <module>dranawhite-api</module>
        <module>dranawhite-common</module>
        <module>dranawhite-log</module>
        <module>dranawhite-config</module>
        <module>dranawhite-dal</module>
        <module>dranawhite-tx</module>
        <module>dranawhite-cache</module>
        <module>dranawhite-office</module>
        <module>dranawhite-job</module>
        <module>dranawhite-mq</module>
        <module>dranawhite-distributed</module>
        <module>dranawhite-interceptor</module>
        <module>dranawhite-event</module>
        <module>dranawhite-core</module>
        <module>dranawhite-web</module>
        <module>dranawhite-test</module>
        <module>dranawhite-nosql</module>
    </modules>

    <properties>
        <!-- 编译版本号 -->
        <encoding>UTF-8</encoding>
        <jdk.version>1.8</jdk.version>
        <!-- 工程构建 -->
        <lombok.version>1.16.20</lombok.version>
        <orika.version>1.5.2</orika.version>
        <!-- Spring  -->
        <spring-boot.version>1.5.8.RELEASE</spring-boot.version>
        <junit.version>4.12</junit.version>

        <!-- Maven远程发布 -->
        <wagon-ssh.version>2.8</wagon-ssh.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Orika -->
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika.version}</version>
            </dependency>

            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- 工程构建 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>ma.glasnost.orika</groupId>
            <artifactId>orika-core</artifactId>
        </dependency>

        <!-- Unit Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.vm</include>
                    <include>**/*.txt</include>
                    <include>**/*.xlsx</include>
                    <include>**/*.xls</include>
                    <include>**/*.html</include>
                    <include>**/*.pdf</include>
                    <include>META-INF/services/*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.xlsx</include>
                    <include>**/*.xls</include>
                </includes>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <!-- SSH协议增强 -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>${wagon-ssh.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <!-- 编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <encoding>${encoding}</encoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <!-- 编译时生成所有调试信息 -->
                                <compilerArgs>
                                    <arg>-g</arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- 资源插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <encoding>${encoding}</encoding>
                    </configuration>
                </plugin>
                <!-- Jar打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <archive>
                            <!-- 去除Maven自动生成的.MF文件;避免SPI时覆盖 -->
                            <addMavenDescriptor>false</addMavenDescriptor>
                        </archive>
                    </configuration>
                </plugin>
                <!-- War打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <warName>${project.artifactId}</warName>
                    </configuration>
                </plugin>
                <!-- 打包套件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- 发布插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <!-- JavaDoc插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <encoding>${encoding}</encoding>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <additionalOptions>-Xdoclint:none</additionalOptions>
                    </configuration>
                </plugin>
                <!-- 代码打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 打包套件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <transformers>
                            <!-- 合并所有jar的spring.schemas -->
                            <transformer
                                    implementation = "org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.handlers</resource>
                            </transformer>
                            <transformer
                                    implementation = "org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.schemas</resource>
                            </transformer>
                        </transformers>
                    </configuration>
                    <executions>
                        <execution>
                            <id>package</id>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <!-- 不去除无用的类 -->
                                <minimizeJar>false</minimizeJar>
                                <artifactSet>
                                    <excludes>
                                        <exclude>org.springframework:spring-test</exclude>
                                        <exclude>junit:junit</exclude>
                                    </excludes>
                                </artifactSet>
                                <!-- 将jar包中资源去除掉 -->
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                                <finalName>${project.artifactId}</finalName>
                                <!-- 重命名jar包后缀为shade -->
                                <shadedArtifactAttached>true</shadedArtifactAttached>
                                <shadedClassifierName>shade</shadedClassifierName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- 单元测试插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                    <!-- 开启10个线程并发运行单元测试 -->
                    <configuration>
                        <parallel>classesAndMethods</parallel>
                        <threadCount>10</threadCount>
                    </configuration>
                </plugin>
                <!-- Maven远程发布插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>wagon-maven-plugin</artifactId>
                    <version>1.0</version>
                    <executions>
                        <execution>
                            <id>upload-single</id>
                            <phase>package</phase>
                            <goals>
                                <!-- 上传 -->
                                <goal>upload-single</goal>
                                <!-- 执行命令 -->
                                <goal>sshexec</goal>
                            </goals>
                            <configuration>
                                <fromFile>${project.build.directory}/${project.artifactId}.war</fromFile>
                                <url>scp://user:password@IP/HOME/tomcat/webapps/</url>
                                <commands>
                                    <!-- 重启Tomcat -->
                                    <command>sh $HOME/restart_tomcat.sh restart</command>
                                </commands>
                                <!-- 显示命令 -->
                                <displayCommandOutputs>true</displayCommandOutputs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Tomcat插件 -->
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                    <configuration>
                        <!-- Tomcat端口号 -->
                        <port>8080</port>
                        <!-- URL按照UTF-8进行编码 -->
                        <uriEncoding>${encoding}</uriEncoding>
                        <!-- setting.xml中配置的Server ID -->
                        <server>TomcatServer</server>
                        <contextFile>
                            ${project.build.outputDirectory}/tomcat/tomcat-context.xml
                        </contextFile>
                    </configuration>
                </plugin>
                <!-- Jetty插件 -->
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>6.1.26</version>
                    <configuration>
                        <connectors>
                            <connector
                                    implementation = "org.mortbay.jetty.nio.SelectChannelConnector">
                                <port>8080</port>
                                <maxIdleTime>600000</maxIdleTime>
                            </connector>
                        </connectors>
                        <!-- 在设置间隔秒检查Web应用是否有变化。默认为0，表示禁用热部署 -->
                        <scanIntervalSeconds>3</scanIntervalSeconds>
                        <jettyEnvXml>${project.build.outputDirectory}/jetty/jetty-env.xml</jettyEnvXml>
                        <reload>automatic</reload>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>